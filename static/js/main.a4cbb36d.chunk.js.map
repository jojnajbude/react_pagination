{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","pages","Array","Math","ceil","fill","itemsOnPage","countOfPages","className","classNames","disabled","href","onClick","map","_","idx","active","random","toString","slice","filter","items","from","to","numbers","n","push","getNumbers","perPageOptions","App","length","useState","setPerPage","setCurrentPage","lastItemonPage","id","value","onChange","e","target","option","htmlFor","page","ReactDOM","render","document","getElementById"],"mappings":"oNAUaA,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAQC,MAAMC,KAAKC,KAAKP,EAAQC,IAAUO,KAAK,MAC/CC,EAAcJ,MAAMJ,GAASO,KAAK,MAClCE,EAAeJ,KAAKC,KAAKP,EAAQC,GAAW,EAclD,OACE,qCACE,qBAAIU,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CACEC,SAA0B,IAAhBX,IAHd,SAOE,mBACE,UAAQ,WACRS,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBZ,EACfa,QAAS,WApBG,IAAhBb,GACFC,EAAaD,EAAc,IAcvB,oBAUDE,EAAMY,KAAI,SAACC,EAAGC,GAAJ,OACT,oBACEP,UAAWC,IACT,YACA,CACEO,OAAQjB,IAAgBgB,IAJ9B,SASE,mBACE,UAAQ,WACRP,UAAU,YACVG,KAAI,WAAMI,EAAM,GAChBH,QAAS,kBAAMZ,EAAae,IAJ9B,SAMGA,EAAM,KAfX,eAOeZ,KAAKc,SAASC,WAAWC,OAAO,QAYjD,oBAAIX,UAAWC,IACb,YACA,CACEC,SAAUX,IAAgBQ,IAH9B,SAOE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeZ,IAAgBQ,EAC/BK,QAAS,WA/Dbb,IAAgBQ,GAClBP,EAAaD,EAAc,IAyDvB,uBAWJ,6BACGO,EAAYO,KAAI,SAACC,EAAGC,GAAJ,OACf,oBACE,UAAQ,OADV,wBAIWhB,EAAcD,EAAUiB,EAAM,IAJzC,eAEeZ,KAAKc,SAASC,WAAWC,OAAO,QAI9CC,QAAO,SAACN,EAAGC,GAAJ,OAAYhB,EAAcD,EAAUiB,EAAMlB,WC3FtDwB,ECPC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDAKG,CAAW,EAAG,IACzBd,KAAI,SAAAY,GAAC,qBAAYA,MAEdG,EAA2B,CAAC,EAAG,EAAG,GAAI,IAE/BC,EAAgB,WAC3B,IAAMhC,EAAQwB,EAAMS,OACpB,EAA8BC,mBAAS,GAAvC,mBAAOjC,EAAP,KAAgBkC,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOhC,EAAP,KAAoBkC,EAApB,KAMMC,EAAkBnC,EAAcD,EAAWA,EAAUD,EACtDE,EAAcD,EAAWA,EAC1BD,EAEJ,OACE,sBAAKW,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWT,EAAc,EADzB,mBAEIA,EAAcD,EAAU,EAF5B,cAEmCoC,EAFnC,eAEwDrC,EAFxD,OAKA,sBAAKW,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACR2B,GAAG,kBACHC,MAAOtC,EACPU,UAAU,eACV6B,SAAU,SAACC,GACTN,GAAYM,EAAEC,OAAOH,OACrBH,EAAe,IAPnB,SAUGL,EAAef,KAAI,SAAA2B,GAAM,OACxB,wBAAqBJ,MAAOI,EAA5B,SACGA,GADUA,UAOnB,uBAAOC,QAAQ,kBAAkBjC,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEX,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aA9Ca,SAAC0C,GAClBT,EAAeS,UEfnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a4cbb36d.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pages = Array(Math.ceil(total / perPage)).fill(null);\n  const itemsOnPage = Array(perPage).fill(null);\n  const countOfPages = Math.ceil(total / perPage) - 1;\n\n  const handlerNextButton = () => {\n    if (currentPage !== countOfPages) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const handlerPrevButton = () => {\n    if (currentPage !== 0) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={classNames(\n          'page-item',\n          {\n            disabled: currentPage === 0,\n          },\n        )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 0}\n            onClick={() => handlerPrevButton()}\n          >\n            «\n          </a>\n        </li>\n        {pages.map((_, idx) => (\n          <li\n            className={classNames(\n              'page-item',\n              {\n                active: currentPage === idx,\n              },\n            )}\n            key={`page-${Math.random().toString().slice(-4)}`}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${idx + 1}`}\n              onClick={() => onPageChange(idx)}\n            >\n              {idx + 1}\n            </a>\n          </li>\n        ))}\n        <li className={classNames(\n          'page-item',\n          {\n            disabled: currentPage === countOfPages,\n          },\n        )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === countOfPages}\n            onClick={() => handlerNextButton()}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {itemsOnPage.map((_, idx) => (\n          <li\n            data-cy=\"item\"\n            key={`item ${Math.random().toString().slice(-4)}`}\n          >\n            {`Item ${currentPage * perPage + idx + 1}`}\n          </li>\n        )).filter((_, idx) => currentPage * perPage + idx < total)}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\n\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nconst perPageOptions: number[] = [3, 5, 10, 20];\n\nexport const App: React.FC = () => {\n  const total = items.length;\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(0);\n\n  const pageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const lastItemonPage = (currentPage * perPage) + perPage < total\n    ? (currentPage * perPage) + perPage\n    : total;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage + 1} (items ${\n          currentPage * perPage + 1} - ${lastItemonPage} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            value={perPage}\n            className=\"form-control\"\n            onChange={(e) => {\n              setPerPage(+e.target.value);\n              setCurrentPage(0);\n            }}\n          >\n            {perPageOptions.map(option => (\n              <option key={option} value={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={pageChange}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}